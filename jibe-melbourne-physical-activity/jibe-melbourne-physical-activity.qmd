---
title: "Modelling physical activity in Melbourne"
format: gfm
execute:
  # no data is to be included in this document, unless intentionally over-ridden
  output: false 
knitr:
  opts_chunk: 
    collapse: true
---

This Quarto markdown document is intended to contain code to predict physical activity for sport and recreation including walking and cycling, given explanatory variables (age, sex, employment and student status, and socio-economic status, etc) that align with the JIBE synthetic population data. This will be conducted to predict physical activity for residents of Melbourne, Australia, using the Australian Bureau of Statistics Australian National Health Survey data (2017-18).

The analysis draws on Belen Zapata-Diomedi's code for cleaning the NHS dataset (../document.qmd), and Belen Zapata-Diomedi, Qin Zhang and Marina Berdikhanova's code for a predictive model of marginal metabolic equivalent hours per week (mMET house/week) for Manchester, UK.

For comparability with the Manhcester model in the JIBE workflow, we may wish to more or less closely mirror the variables used in the physical activity model, as detailed in the Manchester coefficients file, `sportPAmodel.csv`.  This contains a binary gender indicator (`female`), an age group factor variable (<25, 25-34, 35-44, 45-54, 55-64, 65-74, 75+), work status (retired, student or ddddunemployed), and relative socio-economic disadvantage (UK Index of Multiple Deprivation; `imd10`).  The latter variable is included as a continuous variable in the Manchester analysis.  

## Usage

To allow this code to be run on different computers and operating systems easily, rather than hardcode data paths for inputs there is a file chooser for the three key inputs used:

1.  ABS NHS households (NHS17HHB.csv)
2.  ABS NHS persons (NHS17PSB.csv)
3.  Melbourne synthetic population (population_final.rds)

The user will be asked to provide paths for these files in this order. If using RStudio or Visual Studio code, there should be a graphical file picker. If using Posit or commandline on linux, you may have to enter the file path string.

## Dependencies

Analysis was conducted using R 4.4.1 using a Quarto markdown document (Quarto 1.5.55) in Positron IDE (2024.10.0), with renv 1.0.11 for package management.

The following packages have been installed using renv:

```         
renv::install(c('dplyr','data.table','ggplot2','vtable','rmarkdown','pscl','jtools'))
```

In principle, the R environment for this notebook should be able to be restored by running

```         
renv::restore()
```

Load libaries

```{r}
#| label: load-libraries
library(dplyr)
library(vtable) # descrtiptive statistic model.tables
library(jtools) # clean model summaries
library(ggplot2)
library(data.table)
library(MASS) # for glm negative binomial model
```

## Data

[National Health Survey](https://www.abs.gov.au/statistics/microdata-tablebuilder/available-microdata-tablebuilder/national-health-survey) (NHS) data for 2017-18 were retrieved from the [Microdata Downloads](https://microdatadownload.abs.gov.au/MicrodataDownload/login.xhtml) section of the Australian Bureau of Statistics website on 3 December 2024. ABS Microdata were accessed under the [ABS/Universities Australia Agreement (2024)](https://www.abs.gov.au/statistics/microdata-tablebuilder/absuniversities-australia-agreement) by Carl Higgs (RMIT University). The NHS Microdata data descriptions are available for download [here](https://www.abs.gov.au/statistics/microdata-tablebuilder/available-microdata-tablebuilder/national-health-survey#data-item-lists).

NHS microdata are provided in CSV, SAS, SPSS, or Stata formats. The CSV data do not have labels. The `haven` package could be installed to read the labelled data in .dta (Stata) format. However, perhaps labels are not required --- for now, CSV will be used to keep things simple.

| File (csv, dta, etc) | Description                |
|----------------------|----------------------------|
| NHS17HHB             | Household level data       |
| NHS17SPB             | Person level data          |
| NHS17A3B             | Alcohol day level data     |
| NHS17A4B             | Alcohol type level data    |
| NHS17CNB             | Conditions level data      |
| NHS17MDB             | Medications level data     |
| NHS17HLB             | Health Literacy level data |

: ABS NHS 2017-18 Microdata files

The household data contain geographic attributes and could potentially be used to restrict the sample, e.g. to residents of urban areas within Greater Melbourne. Sensitivity analysis could be conducted to evaluate the impact of this decision, e.g. relative to all persons and all persons living in Australian urban regions.

Household variables of interest include:

| Variable                 | Description                                                                             | Comment           |
|------------------|----------------------|--------------------------------|
| ABSHIDB                  | Household identifier                                                                    | Link with persons |
| STATE16                  | State or Territory (ASGS 2016)                                                          | 2 == Victoria     |
| NUMPERBC                 | Number                                                                                  |                   |
| of persons  in household | 0, 1, 2, 3, 4, 5, 6==6+                                                                 |                   |
| SA1SF2DN                 | SEIFA - Index of Relative Socio-economic Disadvantage - 2016 - SA1 - Deciles - National |                   |

Person-level variables of interest (see data dictionaries for detailed codes) include:

| Variable                   | Description                             | Comment                                                                                                                                                 |
|------------------|----------------------|--------------------------------|
| ABSPID                     | Person identifier                       | person number within household                                                                                                                          |
| ABSHIDB                    | Household identifier                    | Link with households, but actually does not match for CURF records                                                                                      |
| AGEB                       | Age of person                           | 1== 0-4 years  … 19 == 85 years+                                                                                                                        |
| SEX                        | Sex of person                           | 1==Male, 2==Female                                                                                                                                      |
| LFSBC                      | Labour force status                     | 0==NA, 1==Employed, 2==Unemployed, 3==Not in the labour force                                                                                           |
| EMPSTAT                    | Labour force full-time/part-time status | 0==NA, 1==Employed full time ... 6 Not in labour force                                                                                                  |
| STDYFTPT                   | Whether currently studying full-time or part-time | 0. Not applicable, 1. Studying full-time, 2. Studying part-time, 3. Not studying |
| Walk for recreation (mins) | EXFSRMIN                                | Total minutes walked for fitness, recreation or sport in last week (for at least 10 minutes)                                                            |
| Walk for transport (mins)  | EXTRAMIN                                | Total minutes spent walking for transport in last week (for at least 10 minutes)                                                                        |
| Moderate exercise (mins)   | EXLWMMIN                                | Total minutes undertaken moderate exercise last week (for example, a light jog, strenght and toning exercises, lifting small boxes and sweeping)        |
| Vigorous exercise (mins)   | EXLWVMIN                                | Total minutes undertaken vigorous exercise last week (for example, playing basketball, running, lifting heavy boxes, and strength and toning exercises) |

Regarding the `AGEB` age bracket variable, the specific breaks for this are as follows (note that age brackets `4` and `5` are not 5-year brackets.  This allows distinguishing persons aged 18 and over:

|Value | Age group   |
|------|-------------|
|1 |0 - 4 years      |
|2 |5 - 9 years      |
|3 |10 - 14 years    |
|4 |15 - 17 years    |
|5 |18 - 19 years    |
|6 |20 - 24 years    |
|7 |25 - 29 years    |
|8 |30 - 34 years    |
|9 |35 - 39 years    |
|10|40 - 44 years    |
|11|45 - 49 years    |
|12|50 - 54 years    |
|13|55 - 59 years    |
|14|60 - 64 years    |
|15|65 - 69 years    |
|16|70 - 74 years    |
|17|75 - 79 years    |
|18|80 - 84 years    |
|19|85 years and over|


## Methods

### Read and join NHS data

Adults aged 18 years and over from the persons dataset are left joined to the household data, with only the relevant variables retained. The core exposure variables are renamed to enhance readability of the subsequent code.

```{r}
#| label: load-NHS17HHB.csv-NHS17SPB.csv
# choose household file (may require GUI IDE like RStudio/PositStudio/VSCode)
NHS17HHB.csv <- file.choose()
# choose person file (may require GUI IDE like RStudio/PositStudio/VSCode)
NHS17SPB.csv <- file.choose()
data <- list(
    households = read.csv(NHS17HHB.csv),
    persons = read.csv(NHS17SPB.csv)
)
```

```{r}
#| label: merge-nhs-data
#| output: true

nhs <- dplyr::left_join(
            data$households[c( 
                        "ABSHIDB",
                        "STATE16", 
                        "NUMPERBC",
                        "SA1SF2DN"
                    )],
            data$persons[c(
                        "ABSHIDB",
                        "ABSPID",
                        "AGEB",
                        "SEX",
                        "LFSBC",
                        "STDYFTPT",
                        "EXFSRMIN",
                        "EXTRAMIN",
                        "EXLWMMIN",
                        "EXLWVMIN"
                    )
                ] %>% rename(
                    walk_recreation_min=EXFSRMIN,
                    walk_transport_min=EXTRAMIN,
                    mod_excercise_min=EXLWMMIN,
                    vig_excercise_min=EXLWVMIN
                )%>% 
                filter(
                    AGEB > 4
                ), 
        by = c("ABSHIDB")
        ) 
nhs %>% st(out='kable')
```

### Read and consider the synthetic population data

To predict recreationals mMETs for the synthetic population, we need to understand how the variables are structured and ensure that our NHS derived data that we will use in modelling has a comparable structure. We'll load up the data and consider a summary of variables to better understand this.

I am using [data.table](https://cran.r-project.org/web/packages/data.table/vignettes/datatable-intro.html) as it is meant to be optimised for handling large datasets, like this synthetic population. This performs subsequent operations deriving new variables much faster.  To ensure the source data that we'll later attach modelled results to remains otherwise unmodified, I'll also create a copy 'pp'.  The name 'pp' is used to refer to the synthetic population in related modelling work undertaken for Manchester.

```{r}
#| label: load-synthetic-population-population_final.rds
#| output: true
population_final.rds <- file.choose()
synpop <- readRDS(population_final.rds) %>% as.data.table()
synpop %>% st(out='kable')
pp <- data.table(synpop)
```

Considering the above, including the Manchester model specifications with which we want comparability, we will represent varaibles as follow:

- sex as a binary indicator 'female' having 0 (male) and 1 (female)
- age using an age group factor variable with decade breaks to match those used for Manchester
- employment as a binary variable "employed" with values of 0 (no) and 1 (yes).
- student status as binary variable 'student' with values of 0 (no) and 1 (yes).
- relative socio-economic disadvantage using SA1 Index of Relative Socio-economic Disadvantage deciles (`IRSD`), ranging from 1 to 10.

### Data preparation

Missing data or NA values (e.g 99997 and 99998) are replaced as missing, while maximum values of walking time variables are truncated at 840 minutes to constrain influence of extreme outliers.

The NHS SA1 Index of Relative Socio-economic Disadvantage (IRSD; `SA1SF2DN`) is retained in decile form for comparability with the Manchester approach ([preliminary analysis](https://github.com/jibeproject/physical-activity-Melbourne/issues/2) treating this as a factor variable suggested the association between reduced deprivation and mMET hours/week was negative linear and monotonic in any case).

Age will be set up as a factor variable having age groups of < 25 and then by decade through to over 75, in order to match the JIBE Manchester model.

To match the synthetic population data for Melbourne a binary indicators 'is_employed' and 'student_status' will be created.

Marginal metabolic equivalent hours per week (mMET hours/week; `mmet`) are calculated as the sum of hours spent walking for recreation, doing moderate exercise and doing vigorous exercise, with each respectively multiplied by the metabolic equivalent of these tasks (METs) minus one (already in MMETs in code).  These have been rounded to integers to support consideration of negative binomial models, that may make sense for this type of positive skewed zero-inflated data (a possible alternative to a linear hurdle model).

When deriving factor variables I have set ordered to False, as the alternative setting needlessly over-complicates the modelling (i.e. derives polynomial functions) and limits our capacity to transfer predictions for the synthetic population (see https://stackoverflow.com/questions/57297771/interpretation-of-l-q-c-4-for-logistic-regression).

Remember that SA1 IRSD ranges from 1 (most deprived) to 5 (least deprived).

```{r}
#| label: setup-pa-data
#| output: true
MMET_MOD <- 3.5 # As in meta analysis GArcia et al. 
MMET_VIG <- 7 # As in meta analysis GArcia et al. 
MMET_CYCLING <- 5.8 # From ithimr (check)
MMET_WALKING <- 2.5 # From ithimr (check)

pa_data <- nhs  %>%
    filter(AGEB >= 5) %>%
    mutate_all(~ ifelse( . %in% c(99997, 99998), NA, .)) %>%
    mutate(
        walk_recreation_min = case_when(
                walk_recreation_min > 840 ~ 840, 
                TRUE ~  walk_recreation_min # handles unexpected values using default
            ),
        walk_transport_min = case_when(
                walk_transport_min > 840 ~ 840, 
                TRUE ~ walk_transport_min
            ),
        mod_excercise_min = case_when(
                mod_excercise_min > 840 ~ 840, 
                TRUE ~ mod_excercise_min
            ),
        vig_excercise_min = case_when(
                vig_excercise_min > 840 ~ 840, 
                TRUE ~ vig_excercise_min
            )
    ) %>%
    mutate(
        irsd_sa1 = SA1SF2DN,
        age_group = case_when(
            AGEB < 7 ~ "age_group_18_25",
            AGEB < 9 ~ "age_group_25_34",
            AGEB < 11 ~ "age_group_35_44",
            AGEB < 13 ~ "age_group_45_54",
            AGEB < 15 ~ "age_group_55_64",
            AGEB < 17 ~ "age_group_65_74",
            AGEB >= 17 ~ "age_group_over75",
            TRUE ~ NA_character_  # Handle unexpected values
        ),
        age_group = factor(
            age_group,
            levels = c(
                "age_group_under25",
                "age_group_25_34",
                "age_group_35_44",
                "age_group_45_54",
                "age_group_55_64",
                "age_group_65_74",
                "age_group_over75"
            ),
            ordered = FALSE
        ),
        female=SEX==2,
        is_employed = LFSBC == 1,
        student_status = STDYFTPT %in% c(1, 2),
    )  %>%
    mutate(
        mmet_hrs_wk_recreation = round(
            walk_recreation_min/60* MMET_WALKING + 
            mod_excercise_min/60 * MMET_MOD + 
            vig_excercise_min/60 * MMET_VIG
            ), 
        mmet_hrs_wk_total = round(
            walk_transport_min/60 * MMET_WALKING + 
            walk_recreation_min/60* MMET_WALKING +
            mod_excercise_min/60 * MMET_MOD + 
            vig_excercise_min/60 * MMET_VIG
        ),
        mmet_hrs_wk_recreation_zero = ifelse(mmet_hrs_wk_recreation == 0, 1, 0)
    ) 

pa_data %>% st(out='kable')
```

### Exploratory data analysis

The following function can be used for retrieving core summary statistics that can be subsequently combined in a comparison table, for example, comparing sub-groups and overall for relevant variables, and against external reference standards.

```{r}
summary_stats <- function(
    data,
    variable
) {
    summary.table <- data %>%
        summarise(
            count = sum(!is.na(get(variable))),
            mean = mean(get(variable), na.rm = TRUE),
            sd = sd(get(variable), na.rm = TRUE),
            min = min(get(variable), na.rm = TRUE),
            p25 = quantile(get(variable), 0.25, na.rm = TRUE),
            p50 = median(get(variable), na.rm = TRUE),
            p75 = quantile(get(variable), 0.75, na.rm = TRUE),
            max = max(get(variable), na.rm = TRUE)
        ) 
    return (summary.table)
}


summary_stats_by <- function(
    data,
    variable,
    by
) {
    library(dplyr)
    grouped_data <- data %>% group_by(get(by))
    summary_table <- grouped_data %>% 
        summarise(
            n = n(),
            count = sum(!is.na(get(variable))),
            mean = mean(get(variable), na.rm = TRUE),
            sd = sd(get(variable), na.rm = TRUE),
            min = min(get(variable), na.rm = TRUE),
            p25 = quantile(get(variable), 0.25, na.rm = TRUE),
            p50 = median(get(variable), na.rm = TRUE),
            p75 = quantile(get(variable), 0.75, na.rm = TRUE),
            max = max(get(variable), na.rm = TRUE)
        )%>% 
        rename(!!by := 'get(by)')
    
    return(summary_table)
}

mmets_summaries <- list()
```

#### Summary statistics of mMET hours/week for prediction model (recreation only)

The variable `mmet_hrs_wk_recreation` combines moderate recreational, vigorous recreational and walking for recreation acitivies.

```{r}
desc <- "NHS (recreation)"
var <- 'mmet_hrs_wk_recreation'
mmets_summaries[['recreation']] = rbind(
    cbind(
        summary=desc, 
        sex="Men",
        summary_stats(pa_data %>% filter(SEX==1),var)
    ),
    cbind(
        summary=desc, 
        sex="Women",
        summary_stats(pa_data %>% filter(SEX==2),var)
    ),
    cbind(
        summary=desc, 
        sex="Overall",
        summary_stats(pa_data,var)
    )
)
```

#### Summary statistics of mmets for comparison with Meta analysis (recreational exercise, and walking for recreation and transport)

The variable `mmet_hrs_wk_total` combines moderate recreational, vigorous recreational and walking for recreation and transport activities.

```{r}
desc <- "NHS (total)"
var <- 'mmet_hrs_wk_total'
mmets_summaries[['total']]  <- rbind(
    cbind(
        summary=desc, 
        sex="Men",
        summary_stats(pa_data %>% filter(SEX==1),var)
    ),
    cbind(
        summary=desc, 
        sex="Women",
        summary_stats(pa_data %>% filter(SEX==2),var)
    ),
    cbind(
        summary=desc, 
        sex="Overall",
        summary_stats(pa_data,var)
    )
)
```

This estimate of total mMET hours/week can support comparisons with meta-analysis results.  According to https://shiny.mrc-epid.cam.ac.uk/meta-analyses-physical-activity/ the marginal MET hours per week overall, and by sex for all-cause mortality was,


| summary                   | sex     | count | mean   | sd | min | p25  | p50   | p75   | max    |
|---------------------------|---------|-------|--------|----|-----|------|-------|-------|--------|
| Meta-analysis | Men     |       | 18.698 |    | 0   | 2.73 | 10.66 | 23.87 | 156.45 |
| Meta-analysis | Women   |       | 17.352 |    | 0   | 2.61 | 10.66 | 22.82 | 103.6  |
| Meta-analysis | Overall |       | 16.908 |    | 0   | 2.35 | 10.5  | 22.5  | 130.02 |



```{r}
#| label: compare-mmets
#| output: true

meta_analysis_results <- data.frame(
  summary = rep("meta-analysis (total)", 3),
  sex = c("Men", "Women", "Overall"),
  count = c(NA, NA, NA),
  mean = c(18.698, 17.352, 16.908),
  sd = c(NA, NA, NA),
  min = c(0, 0, 0),
  p25 = c(2.73, 2.61, 2.35),
  p50 = c(10.66, 10.66, 10.5),
  p75 = c(23.87, 22.82, 22.5),
  max = c(156.45, 103.6, 130.02)
)

mmets_comparison <- rbind(
        meta_analysis_results,
        mmets_summaries[['total']],
        mmets_summaries[['recreation']]
    )
options(knitr.kable.NA = '-')
knitr::kable(
    mmets_comparison,
    caption = "Marginal MET hours per week",
    digits=3
)
```


#### Correlations

```{r}
#| label: explore-correlations
#| output: true
cor=as.data.frame(lapply(pa_data[, c("irsd_sa1", "age_group", "female", "is_employed", "student_status", "NUMPERBC", "mmet_hrs_wk_recreation")], as.numeric))
cor=na.omit(cor)
correlation_matrix <- cor(cor) %>% as.data.frame()
# corrplot(correlation_matrix %>% as.double(), method = "number",order = "FPC",type="lower") 
correlation_matrix[order(correlation_matrix$mmet_hrs_wk_recreation),] %>% round(2)
```

None of the variables in themselves display clear associatino with mMET hours/week. Age is associated with lower mMET hours/week, as is being female (negative correlations). Number of persons in household and being a student were not associated with mMETs. Employment, lower socio-economic deprivation, and higher degree of education had weak positive associations with mMET hours/week.

#### Clustering

Persons are theoretically clustered within households. If there is more than one person within each household, as this data structure implies, this clustering should be accounted for in the model. The following checks the maximum number of persons within households, and confirms that only one person is associated with each household and so clustering within households will not be required in the model.

```{r}
#| label: explore-clustering
#| output: true
pa_data %>%
  group_by(ABSHIDB) %>%
  summarise(num_persons = n()) %>%
  summarise(max_persons = max(num_persons))
```

#### Set up data for modelling

Select relevant variables and only retain records with full data.

```{r}
#| label: collate-modelling-data
#| output: true
pa_data =pa_data[
    c('ABSPID', 'age_group', 'female', 'is_employed', 'student_status', 'irsd_sa1','mmet_hrs_wk_recreation', 'mmet_hrs_wk_recreation_zero')
    ] %>% na.omit()

pa_data %>% st(out='kable')
```

Now the full analytical sample has been determined, a subset of data for persons who record at least some mMET hours/week will be copied to a new dataframe.

```{r}
#| label: collate-modelling-positive-mMETS-data
#| output: true
pa_data_over0=pa_data[pa_data$mmet_hrs_wk_recreation>0,]
pa_data_over0 %>% st(out='kable')
```

#### Synthetic population data set up
The NHS survey provides age in brackets, while the synthetic population has continuous age as well as an age category variable.  The grouping of the latter are not explicitly named however, and if we were to use age groups it may be best to create a new group to specifically match the NHS brackets used in modelling.

Let's have a look at the age brackets in the synthetic population first:
```{r}
#| label: pp-age
#| output: true
summary_stats_by(pp,'Age','age_cat') %>% print(n=Inf)
``` 

To match the age group variable derived for the NHS survey based on JIBE Manchester, we'll have to derive new age brackets for the synthetic population.  

```{r}
age_breaks <- c(-Inf, 25, 35, 45, 55, 65, 75, Inf)
age_labels <- c("age_group_under25", "age_group_25_34", "age_group_35_44", "age_group_45_54", "age_group_55_64", "age_group_65_74", "age_group_over75")

pp$age_group <- cut(pp$Age, breaks = age_breaks, labels = age_labels, right = FALSE)
summary_stats_by(pp,'Age','age_group') %>% print(n=Inf)
```

Great, so now there's an age bracket variable in the synthetic population that matches the NHS data breaks.

There are some remaining variables to derive in order to get our synthetic population data into the equivalent format to our model. Then we can use our predictions and apply them to the synthetic population.

```{r}
#| label: prepare-synthetic-population-prediction
#| output: true
# Perform the transformations
pp[, `:=`(
    irsd_sa1 = IRSD,
    female = Gender == "Female",
    is_employed = is_employed == "Yes",
    student_status = student_status
)]

# Select the relevant columns
data <- pp[Age >= 18, .(AgentId, age_group, female, is_employed, student_status, irsd_sa1)] 
data %>% st(out='kable')
```

### Modelling

The modelling approach (and earlier data preparation) draws on code from the Manchester physical activity modelling R code file `otherSportPA_hurdle_v3.R` authored by Qin Zhang, Belen Zapata-Diomedi and Marina Berdikhanova.

Age as categorical does not display any clear trend, whereas there is a strong association for age when modelled as a continuous variable.  Because the purpose of this model is prediction and not inference, the use of age brackets may be justified to account for the slight non-linearity observed when making predictions for the synthetic population.  This implications of this decision will be explored further in subsequent sensitivity analysis.

A negative binomial model was used to model the recreational physical activity data for those who recorded mMET hours/week as it was found to provide a better prediction for the skewed data than a linear model.  Modelling options supporting this decision are explored in a sensitivity analysis further below.

Note that negative binomial regression results are expressed as log(rate) --- meaning they need to be exponentiated to be interpreted as mMET hours/week.  That is done when making predictions for the response variable.  

```{r}
# initialise model list
m.mMETs_recreational <- list()
```

```{r}
#| label: model-recreation-mMETS-zero
#| output: true

# Logistic regression model of zero mMETS hours/week
m.mMETs_recreational$zeroModel <- glm(
    mmet_hrs_wk_recreation_zero ~ female + age_group + is_employed + student_status + irsd_sa1,
    family = "binomial",
    data = pa_data
)

summ(m.mMETs_recreational$zeroModel, confint = TRUE, digits = 3)
```

```{r}
#| label: model-recreation-mMETS
#| output: true

# Negative binomial model for amount of mMET hours/week physical activity
m.mMETs_recreational$neg_binom_over0 <- glm.nb(
    mmet_hrs_wk_recreation ~ female + age_group + is_employed + student_status + irsd_sa1,
    data = pa_data_over0
)

summ(m.mMETs_recreational$neg_binom_over0, confint = TRUE, digits = 3)
```

### Evaluating model fit

#### Binary predictions of any recreational physical activity being undertaken.

```{r}
#| label: zero_model_confusion_matrix
#| output: true

predicted_probabilities <- predict(m.mMETs_recreational$zeroModel, type = "response")
predicted_binary <- ifelse(predicted_probabilities > 0.5, 1, 0)
observed_binary <- pa_data$mmet_hrs_wk_recreation_zero
confusion_matrix <- table(Predicted = predicted_binary, Observed = observed_binary)
print(confusion_matrix)
```

#### Combined-model predictions

Predictions of amount of physical activity.

```{r}
#| label: review_combined_predictions
#| output: true
nonzero_predictions <- predict(
    m.mMETs_recreational$neg_binom_over0, 
    type = "response", 
    newdata = pa_data)
combined_predictions <- ifelse(predicted_probabilities > 0.5, 0, nonzero_predictions)

# Evaluate the model
observed_values <- pa_data$mmet_hrs_wk_recreation
results <- data.frame(
    observed_values = observed_values,
    combined_predictions = combined_predictions
)
ggplot(results, aes(x = observed_values, y = combined_predictions)) +
    geom_point(alpha = 0.5) +
    geom_abline(slope = 1, intercept = 0, color = "red", linetype = "dashed") +
    labs(
        title = "Scatter Plot of Observed vs. Predicted mMET Hours/Week",
        x = "Observed mMET Hours/Week",
        y = "Predicted mMET Hours/Week"
    ) +
    theme_minimal()
```




Lets look at effects from the main predictive model for amount of mMET hours/week:
```{r}
#| label: effects-plots
#| output: true
effect_plot(
    m.mMETs_recreational$neg_binom_over0, pred = age_group, interval = TRUE, plot.points = TRUE, 
            jitter = 0.05)
effect_plot(
    m.mMETs_recreational$neg_binom_over0, pred = female, interval = TRUE, plot.points = TRUE, 
            jitter = 0.05)
            
effect_plot(
    m.mMETs_recreational$neg_binom_over0, pred = is_employed, interval = TRUE, plot.points = TRUE, 
            jitter = 0.05)
            
effect_plot(
    m.mMETs_recreational$neg_binom_over0, pred = student_status, interval = TRUE, plot.points = TRUE, 
            jitter = 0.05)
            
effect_plot(
    m.mMETs_recreational$neg_binom_over0, pred = irsd_sa1, interval = TRUE, plot.points = TRUE, 
            jitter = 0.05)
```


### Prediction of mMET hours/week for synthetic population

```{r}
#| label: montecarlo-prediction-function
MonteCarlo <- function(model, data,facetVar = NA) {
  probability.matrix <- as.vector(predict(model,data,type = "response"))
  MC.prediction <- rep(NA,nrow(data))
  for(n in c(1:nrow(data))) {
    MC.prediction[n] <- runif(1)<=probability.matrix[n]
  }
  data=data%>%mutate(zeroPrediction=MC.prediction)
  return(data)
}
```

#### Prediction of adults undertaking any recreational physical activity
```{r}
#| label: predict-synpop-mMETs
#| output: true
mmets_prediction=MonteCarlo(m.mMETs_recreational$zeroModel,data)
table(mmets_prediction$zeroPrediction)
```

#### Prediction of amount of recreational physical activity

```{r}
#| label: synpop-prediction-outputs
#| output: true
setDT(mmets_prediction)

mmets_prediction[, mMETs_recreational := ifelse(
  zeroPrediction == FALSE,
  predict(m.mMETs_recreational$neg_binom_over0, .SD, type = "response"),
  0
)]
```
#### Join estimates to synthetic population

```{r}
#| label: synpop-join-ggplot
#| output: true
synpop[mmets_prediction,on='AgentId',mMETs_recreational := i.mMETs_recreational]
summary(synpop$mMETs_recreational)
ggplot(synpop)+stat_ecdf(aes(x=mMETs_recreational))
```

Running the above, it is apparent that a substantial number of individuals have NA values for `mMETS_recreational`.  This might make sense for persons aged < 18 because the model does not support results for children.  However, it should be confirmed that adults do not have NA values for `mMETS_recreational`.

```{r}
#| label: synpop-check-na
#| output: true
synpop[is.na(synpop$IRSD) & synpop$Age >= 18,
    c("Age","Gender","is_employed","student_status","IRSD")
    ] %>% is.na %>% colSums()
```

So 5,558 synthetic individuals live in SA1 areas having NA for IRSD.  This is plausible; [SA1 areas were excluded](https://www.ausstats.abs.gov.au/ausstats/subscriber.nsf/0/756EE3DBEFA869EFCA258259000BA746/$File/SEIFA%202016%20Technical%20Paper.pdf) from being assigned socio-econimic indices for areas (including IRSD) if having low population counts (< 5) or low response rates (which is more likely in areas with low population); such areas may also be industrial areas with negligible population counts.  Using a copy of the [ABS SEIFA 2016 indices](https://www.abs.gov.au/ausstats/subscriber.nsf/log?openagent&2033055001%20-%20sa1%20indexes.xls&2033.0.55.001&Data%20Cubes&40A0EFDE970A1511CA25825D000F8E8D&0&2016&27.03.2018&Latest) linked to the JIBE Greater Melbourne zone file of SA1s, I found that 325/10,289 SA1 areas (1.6%) were not assigned an IRSD, having an estimated usual resident population of 14,014.  That our synthetic population having NA for IRSD (5,558 / 4,174,056; 0.13%) is below this count reflects the lower likelihood of individuals living in such areas.   

The result is, that those individuals living in areas without IRSD are not able to be assigned reacreational mMET hours/week estimates under the current model.

Possibilities include: 1) exclude these individuals; 2) assign them an IRSD that would allow the model to be run for them, acknowledging the limitation of uncertainty for those estimates.  The latter could be done geographically inferring IRSD from proximal SA1 areas, or statistically, assigning NA based on the median observed IRSD assignment (6).  The latter would be a straightforward approach that could allow mMET estimates to be derived for individuals, with median area level IRSD reflecting uncertainty as to the true area.  I believe this is defensible since area level IRSD is an ecological variable that may not reflect true individual disadvantage in any case.

For now, those individuals with NA values have been left in this way; this may be revised pending discussion.

```{r}
#| label: save-predicted-mMETS-synpop
#| output: true
fwrite(synpop,"pp_health_2018_mMETS_recreational.csv")
```

```{r}
#| label: boxplot-mMETs_recreational
#| output: true

# Layout to split the screen
layout(mat = matrix(c(1,2),2,1, byrow=TRUE),  height = c(1,8))
 
# Draw the boxplot and the histogram 
par(mar=c(0, 3.1, 1.1, 2.1))
boxplot(synpop$mMETs_recreational, horizontal=TRUE , ylim=c(0,30), xaxt="n" , col=rgb(0.8,0.8,0,0.5) , frame=F)
par(mar=c(4, 3.1, 1.1, 2.1))
hist(synpop$mMETs_recreational, breaks=40 , col=rgb(0.2,0.8,0.5,0.5) , border=F , main="" , xlab="Predicted mMET hours/week", xlim=c(0,30))
```

#### Combined comparison

```{r}
#| label: overall-mMETs-comparison
#| output: true
desc <- "Synthetic population (recreation)"
var <- 'mMETs_recreational'
mmets_comparison <- rbind(
    mmets_comparison,
    cbind(
        summary=desc, 
        sex="Men",
        summary_stats(synpop %>% filter(Gender=='Male'),var)
    ),
    cbind(
        summary=desc, 
        sex="Women",
        summary_stats(synpop %>% filter(Gender=='Female'),var)
    ),
    cbind(
        summary=desc, 
        sex="Overall",
        summary_stats(synpop,var)
    )
)

options(knitr.kable.NA = '-')
knitr::kable(
    mmets_comparison,
    caption = "Marginal MET hours per week",
    digits=2
)

```

Comparing the meta-analysis estimates for gender-stratified physical activity mMET hours/week to those in the Australian NHS data, the latter has broadly similar if slightly lower estimates overall; approximately 4 mMET-hours/week lower (albeit, with substantial variation).  Conversely, the maximum recorded mMET/hours were higher in the NHS data than in the meta-analysis.  While gender-specific trends were broadly similar (women on average recording lower mMET hours/week in both the meta-analysis and NHS total and recreation estimates), the maximum mMET hours/week for women was higher for women in the Australian NHS sample.  It is worth noting the limitation of the Australian NHS data that it is national and not restricted to an urban population; this could be an important difference, if cohort studies tend to have an urban focus. 

The modelled estimates for recreational mMET hours/week were similar on average to the NHS data from which they were based (similar means by sex and overall).  As the estimates were based on modelled averages, the reduced variability by sex and overall is not surprising.  The median (and 75th percentile, to a lesser degree) of the synthetic population estimates were substantially higher than the NHS data they were modelled from.  This may relate to demographic differences with the synthetic population reflecting demographics of an urban population in Melbourne, compared with the NHS data's national population.  Likely it also reflects aspects of the modelling approach: the hurdle design's binomial model appears to effectively model the propensity to undertake any recreational physical activity (i.e. the zeros) but the modelling of mMET hours/week may otherwise approximate a normal distribution.  This was the case regardless of using a linear model (as currently used, for comparability with the Manchester approach) or a negative binomial model (which resulted in similar if slightly reduced estimates, approximately 1 mMET hour/week lower).  Given the similarity, the simpler model may be preferred, and hence was ultimately used despite the earlier exploratory analysis.  

The resulting synthetic population estimates for mMET hours/week arguably make sense as these are estimates based on average effects given demographic covariates, not true results for individuals.  They are by definition, according to the methods used, normative. Therefore it is not suprising the long tail of maximum mMET hours in the meta-analysis and NHS survey data is truncated to approximately 20 mMET hours/week.  Despite not representing the full and skewed distribution of mMET hours/week that would be expected in the population, if the purpose of the synthetic population is for inference on average effects for the basic range of included covariates, these estimates should be adequate for usage as exposures in the health modelling.


## Sensitivity analysis

### Hurdle model

A hurdle model is a natural choice for rate data like marginal MET hours/week for recreation, because it can describe two distinct data generating processes: individuals' undertaking of any recorded recreational physical activity, and mMET hours/week for those who undertake any. In the context of physical activity data, many individuals may report zero physical activity, while others report varying positive amounts. The hurdle model first models the probability of a zero versus a non-zero outcome using a binomial model, and then models the positive counts separately using a truncated count model (e.g., Poisson or Negative Binomial). This approach can allow for more accurate modeling of the data distribution when there is an excess of zeros and overdispersion in the positive counts, which is common in physical activity data.


Considering the non-normal nature of mMET hours/week, which is a positively skewed rate variable (a non-negative count of hours per week), it is worth considering whether a Poisson model might be more appropriate and provide a better fit.

```{r}
#| label: consider_model_for_rate_data
#| output: true
hist(pa_data$mmet_hrs_wk_recreation) 
hist(log(pa_data$mmet_hrs_wk_recreation))
summary(pa_data$mmet_hrs_wk_recreation)
mean_mmet <- mean(pa_data$mmet_hrs_wk_recreation)
var_mmet <- var(pa_data$mmet_hrs_wk_recreation)

print(paste("Mean:", mean_mmet))
print(paste("Variance:", var_mmet))
if (var_mmet > 2 * mean_mmet) {
    print("var_mmet > 2 * mean_mmet (Consider using a Negative Binomial or Zero-Inflated Negative Binomial model due to overdispersion)")
}
```

The model may appear appoximately normally distributed on a log scale, it also has considerably over-dispersion so a negative binomial model may be appropriate, potentially accounting for the large number of zeros.

The various modelling choices are evaluated below to understand their implications on predictions.

#### Linear, Poisson, or negative binomial?

```{r}
#| label: model-recreation-mMETS-comparison
#| output: true

library(pscl) # for zero-inflated model
m.mMETs_recreational$linear <- lm(
    mmet_hrs_wk_recreation ~ female + age_group + is_employed + student_status + irsd_sa1,
    data = pa_data_over0)

m.mMETs_recreational$poisson <- glm(
    mmet_hrs_wk_recreation ~ female + age_group + is_employed + student_status + irsd_sa1,
    family = "poisson",
    data = pa_data_over0
)

# zero-inflated model uses the full data as an alternative to the hurdle model
m.mMETs_recreational$zinb <- zeroinfl(
    mmet_hrs_wk_recreation ~ female + age_group + is_employed + student_status + irsd_sa1 | female + age_group + is_employed + student_status + irsd_sa1,
    data = pa_data,
    dist = "negbin"
)

aic_values <- data.frame(
    Model = c("Linear", "Poisson", "Negative binomial", "Zero-inflated negative binomial"),
    AIC = c(
        AIC(m.mMETs_recreational$linear), 
        AIC(m.mMETs_recreational$poisson), 
        AIC(m.mMETs_recreational$neg_binom_over0),
        AIC(m.mMETs_recreational$zinb)
    )
)
print(aic_values)
```

The negative binomial hurdle model appears to be the best model, and so was ultimately used in the main analysis.

## Save output models
```{r}
#| label: save-model-outputs
#| output: true
# Get today's date
today_date <- format(Sys.Date(), "%d%m%Y")

# Save the RDS file with today's date in the filename
saveRDS(m.mMETs_recreational, paste0("model_recreational_mMETs_", today_date, ".rds"))
```

